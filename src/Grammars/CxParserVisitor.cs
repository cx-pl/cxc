//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/workspace/cx-pl/cxc/src/Grammars/CxParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace CxCompiler.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CxParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ICxParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilationUnit([NotNull] CxParser.CompilationUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.importStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatements([NotNull] CxParser.ImportStatementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatement([NotNull] CxParser.ImportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.namespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDeclaration([NotNull] CxParser.NamespaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.topLevelDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelDeclarations([NotNull] CxParser.TopLevelDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.topLevelDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTopLevelDeclaration([NotNull] CxParser.TopLevelDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.classModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassModifiers([NotNull] CxParser.ClassModifiersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.classModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassModifier([NotNull] CxParser.ClassModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.visibilityModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVisibilityModifier([NotNull] CxParser.VisibilityModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.classBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassBase([NotNull] CxParser.ClassBaseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.classBaseList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassBaseList([NotNull] CxParser.ClassBaseListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassType([NotNull] CxParser.ClassTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaration([NotNull] CxParser.ClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.classDeclarationBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclarationBody([NotNull] CxParser.ClassDeclarationBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.memberModifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberModifiers([NotNull] CxParser.MemberModifiersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.memberModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberModifier([NotNull] CxParser.MemberModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.memberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberDeclaration([NotNull] CxParser.MemberDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.fieldsDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldsDeclaration([NotNull] CxParser.FieldsDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.fieldInitializers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldInitializers([NotNull] CxParser.FieldInitializersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.fieldInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldInitializer([NotNull] CxParser.FieldInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.propertyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyDeclaration([NotNull] CxParser.PropertyDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.propertyAccessorDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyAccessorDeclarations([NotNull] CxParser.PropertyAccessorDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.propertyAccessorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyAccessorDeclaration([NotNull] CxParser.PropertyAccessorDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.propertyParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyParams([NotNull] CxParser.PropertyParamsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.propertyParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyParam([NotNull] CxParser.PropertyParamContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.propertyAccessorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyAccessorBody([NotNull] CxParser.PropertyAccessorBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.constructorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructorDeclaration([NotNull] CxParser.ConstructorDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.constructorOrBaseInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructorOrBaseInvocation([NotNull] CxParser.ConstructorOrBaseInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] CxParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.functionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParameters([NotNull] CxParser.FunctionParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParameter([NotNull] CxParser.FunctionParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] CxParser.FunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.typedefDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedefDeclaration([NotNull] CxParser.TypedefDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.extensionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtensionDeclaration([NotNull] CxParser.ExtensionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatements([NotNull] CxParser.StatementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] CxParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationStatement([NotNull] CxParser.DeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.localVariableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalVariableDeclarationStatement([NotNull] CxParser.LocalVariableDeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.localVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalVariableDeclaration([NotNull] CxParser.LocalVariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.variableDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarations([NotNull] CxParser.VariableDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] CxParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.embeddedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmbeddedStatement([NotNull] CxParser.EmbeddedStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] CxParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] CxParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] CxParser.SwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.switchSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchSection([NotNull] CxParser.SwitchSectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.switchLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchLabel([NotNull] CxParser.SwitchLabelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.switchLabelFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchLabelFilter([NotNull] CxParser.SwitchLabelFilterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] CxParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.doStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoStatement([NotNull] CxParser.DoStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] CxParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.forInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInitializer([NotNull] CxParser.ForInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.forCheck"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCheck([NotNull] CxParser.ForCheckContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.forIterator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForIterator([NotNull] CxParser.ForIteratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.foreachStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachStatement([NotNull] CxParser.ForeachStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] CxParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.throwStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowStatement([NotNull] CxParser.ThrowStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.tryStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryStatement([NotNull] CxParser.TryStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.catchClauses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCatchClauses([NotNull] CxParser.CatchClausesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.exceptionFilter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExceptionFilter([NotNull] CxParser.ExceptionFilterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.finallyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFinallyClause([NotNull] CxParser.FinallyClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.usingStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingStatement([NotNull] CxParser.UsingStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] CxParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] CxParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.assignOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignOperator([NotNull] CxParser.AssignOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.nonAssignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNonAssignmentExpression([NotNull] CxParser.NonAssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.conditionalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalExpression([NotNull] CxParser.ConditionalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.nullCoalescingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullCoalescingExpression([NotNull] CxParser.NullCoalescingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.conditionalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalOrExpression([NotNull] CxParser.ConditionalOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.conditionalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConditionalAndExpression([NotNull] CxParser.ConditionalAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.inclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInclusiveOrExpression([NotNull] CxParser.InclusiveOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.exclusiveOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExclusiveOrExpression([NotNull] CxParser.ExclusiveOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.andExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] CxParser.AndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] CxParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] CxParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShiftExpression([NotNull] CxParser.ShiftExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] CxParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] CxParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] CxParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpression([NotNull] CxParser.PrimaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.primaryExpressionStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpressionStart([NotNull] CxParser.PrimaryExpressionStartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.arrayExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayExpression([NotNull] CxParser.ArrayExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.memberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccess([NotNull] CxParser.MemberAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.functionInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionInvocation([NotNull] CxParser.FunctionInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.functionInvocationArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionInvocationArguments([NotNull] CxParser.FunctionInvocationArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.functionInvocationArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionInvocationArgument([NotNull] CxParser.FunctionInvocationArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.throwableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowableExpression([NotNull] CxParser.ThrowableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.throwExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowExpression([NotNull] CxParser.ThrowExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.annotations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotations([NotNull] CxParser.AnnotationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotation([NotNull] CxParser.AnnotationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.typeNameOrVoid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeNameOrVoid([NotNull] CxParser.TypeNameOrVoidContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeName([NotNull] CxParser.TypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.arrayDimension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayDimension([NotNull] CxParser.ArrayDimensionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.genericParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericParams([NotNull] CxParser.GenericParamsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.genericParamList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericParamList([NotNull] CxParser.GenericParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.builtInType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBuiltInType([NotNull] CxParser.BuiltInTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.integerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerType([NotNull] CxParser.IntegerTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.floatingType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatingType([NotNull] CxParser.FloatingTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.textualType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTextualType([NotNull] CxParser.TextualTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simpleIdentifier</c>
	/// labeled alternative in <see cref="CxParser.qualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleIdentifier([NotNull] CxParser.SimpleIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>combinedQualifiedIdentifier</c>
	/// labeled alternative in <see cref="CxParser.qualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCombinedQualifiedIdentifier([NotNull] CxParser.CombinedQualifiedIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] CxParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CxParser.booleanLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteral([NotNull] CxParser.BooleanLiteralContext context);
}
} // namespace CxCompiler.Grammar
